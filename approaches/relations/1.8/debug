TRACE:	spotToCellstr(6, '<sub>(equals({a},{b}),<sub>({a},{b},{str2},{cs2}),true,{cs1})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals({a},{b})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals({b})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>(<sub>({a},{b},{str2},{cs2}),true,{cs1})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>({a},{b},{str2},{cs2})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>({b},{str2},{cs2})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>({str2},{cs2})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>({cs2})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>(true,{cs1})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>({cs1})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>(equals({a},{b}),equals({b},{a}),true,{cs})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals({a},{b})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals({b})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>(equals({b},{a}),true,{cs})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals({b},{a})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals({a})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>(true,{cs})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(6, '<sub>({cs})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(and(true,true),true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'and(true,true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'and(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(and(true,false),false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'and(true,false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'and(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(and(false,true),false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'and(false,true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'and(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(and(false,false),false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'and(false,false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'and(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(or(true,true),true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(3, 'or(true,true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(3, 'or(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(or(true,false),true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(3, 'or(true,false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(3, 'or(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(or(false,true),true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(3, 'or(false,true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(3, 'or(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(or(false,false),false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(3, 'or(false,false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(3, 'or(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(not(true),false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'not(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(not(false),true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(4, 'not(false)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(7, 'equals(true)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(8, '<streq>(a,b)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(8, '<streq>(b)')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(8, '<streq>(a,{3})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(8, '<streq>({3})')
TRACE:	/spotToCellstr
TRACE:	spotToCellstr(8, 'shmerps(a)')
TRACE:	/spotToCellstr
TRACE:	spotToCspot(8, 'shmerps(a).')
TRACE:	/spotToCspot
TRACE:	applySubstitution
TRACE:		cspotToCellstr(1, 'shmerps(a).')
TRACE:			cspotToSpot(1, 'shmerps(a).')
TRACE:			/cspotToSpot
TRACE:			spotToCellstr(8, 'shmerps(a).')
TRACE:			/spotToCellstr
TRACE:		/cspotToCellstr
TRACE:		cspotToSpot(1, 'shmerps(a).')
TRACE:		/cspotToSpot
TRACE:		spotToCspot(7, 'shmerps(a).')
TRACE:		/spotToCspot
TRACE:		cspotToCellstr(0, 'shmerps(a).')
TRACE:			cspotToSpot(0, 'shmerps(a).')
TRACE:			/cspotToSpot
TRACE:			spotToCellstr(0, 'shmerps(a).')
TRACE:			/spotToCellstr
TRACE:		/cspotToCellstr
TRACE:		cspotToSpot(0, 'shmerps(a).')
TRACE:		/cspotToSpot
TRACE:		substituteCellstr('shmerps(a).', 1, 'a', 'true')
TRACE:			cspotToSpot(1, 'shmerps(a).')
TRACE:			/cspotToSpot
TRACE:		/substituteCellstr
TRACE:		spotToCellstr(8, 'shmerps(true)')
TRACE:		/spotToCellstr
TRACE:	/applySubstitution
TRACE:	spotToCspot(0, 'a.')
TRACE:	/spotToCspot
TRACE:	applySubstitution
TRACE:		cspotToCellstr(0, 'a.')
TRACE:			cspotToSpot(0, 'a.')
TRACE:			/cspotToSpot
TRACE:			spotToCellstr(0, 'a.')
TRACE:			/spotToCellstr
TRACE:		/cspotToCellstr
TRACE:		cspotToSpot(0, 'a.')
TRACE:		/cspotToSpot
TRACE:		substituteCellstr('a.', 0, 'a', 'true')
TRACE:			cspotToSpot(0, 'a.')
TRACE:			/cspotToSpot
TRACE:		/substituteCellstr
TRACE:	/applySubstitution
TRACE:	spotToCspot(8, '<streq>(a,{3}).')
TRACE:	/spotToCspot
TRACE:	applySubstitution
TRACE:		cspotToCellstr(1, '<streq>(a,{3}).')
TRACE:			cspotToSpot(1, '<streq>(a,{3}).')
TRACE:			/cspotToSpot
TRACE:			spotToCellstr(8, '<streq>(a,{3}).')
TRACE:			/spotToCellstr
TRACE:		/cspotToCellstr
TRACE:		cspotToSpot(1, '<streq>(a,{3}).')
TRACE:		/cspotToSpot
TRACE:		spotToCspot(7, '<streq>(a,{3}).')
TRACE:		/spotToCspot
TRACE:		cspotToCellstr(0, '<streq>(a,{3}).')
TRACE:			cspotToSpot(0, '<streq>(a,{3}).')
TRACE:			/cspotToSpot
TRACE:			spotToCellstr(0, '<streq>(a,{3}).')
TRACE:			/spotToCellstr
TRACE:		/cspotToCellstr
applySubstitution: @nosub prohibits
TRACE:	/applySubstitution
TRACE:	spotToCspot(8, '<streq>(a,{3}).')
TRACE:	/spotToCspot
TRACE:	applySubstitution
TRACE:		cspotToCellstr(1, '<streq>(a,{3}).')
TRACE:			cspotToSpot(1, '<streq>(a,{3}).')
TRACE:			/cspotToSpot
TRACE:			spotToCellstr(8, '<streq>(a,{3}).')
TRACE:			/spotToCellstr
TRACE:		/cspotToCellstr
TRACE:		cspotToSpot(1, '<streq>(a,{3}).')
TRACE:		/cspotToSpot
TRACE:		spotToCspot(7, '<streq>(a,{3}).')
TRACE:		/spotToCspot
TRACE:		cspotToCellstr(0, '<streq>(a,{3}).')
TRACE:			cspotToSpot(0, '<streq>(a,{3}).')
TRACE:			/cspotToSpot
TRACE:			spotToCellstr(0, '<streq>(a,{3}).')
TRACE:			/spotToCellstr
TRACE:		/cspotToCellstr
applySubstitution: @nosub prohibits
TRACE:	/applySubstitution
TRACE:	spotToCspot(8, '<streq>(a,{3}).')
TRACE:	/spotToCspot
TRACE:	applySubstitution
TRACE:		cspotToCellstr(1, '<streq>(a,{3}).')
TRACE:			cspotToSpot(1, '<streq>(a,{3}).')
TRACE:			/cspotToSpot
TRACE:			spotToCellstr(8, '<streq>(a,{3}).')
TRACE:			/spotToCellstr
TRACE:		/cspotToCellstr
TRACE:		cspotToSpot(1, '<streq>(a,{3}).')
TRACE:		/cspotToSpot
TRACE:		spotToCspot(7, '<streq>(a,{3}).')
TRACE:		/spotToCspot
TRACE:		cspotToCellstr(0, '<streq>(a,{3}).')
TRACE:			cspotToSpot(0, '<streq>(a,{3}).')
TRACE:			/cspotToSpot
TRACE:			spotToCellstr(0, '<streq>(a,{3}).')
TRACE:			/spotToCellstr
TRACE:		/cspotToCellstr
applySubstitution: @nosub prohibits
TRACE:	/applySubstitution
